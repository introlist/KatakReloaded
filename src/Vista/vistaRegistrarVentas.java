/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Negocio.Entidades.Cliente;
import Negocio.Entidades.ProductosVendidos;
import Negocio.Entidades.Producto;
import Negocio.Operaciones.AdminClientes;
import Negocio.Operaciones.AdminProductos;

import Negocio.Operaciones.VendedorMayoreo;
import Vista.Tablas.ModeloTablaClientes;
import Vista.Tablas.ModeloTablaProductosVendidos;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/********************************************************************** 
 
    CLASE: {@link vistaRegistrarVentas}
    
    AUTOR: Mario Lopez Duran
    COLABORO: Bernardo Espinoza

 **********************************************************************/
public class vistaRegistrarVentas extends javax.swing.JFrame {
    
    AdminProductos adminProductos = new AdminProductos();
    List<String> nombresProductosDisponibles = adminProductos.getNombresProductosDisponibles();
    List<ProductosVendidos> productosActuales = new ArrayList<>();
    AdminClientes adminClientes = new AdminClientes();
    List<Cliente> clientesActuales  = adminClientes.getListaClientes();;
    VendedorMayoreo vendedorMayoreo = new VendedorMayoreo();
    Cliente clienteComprador = new Cliente();
    double costoTotal;
    
    

    /**
     * Creates new form vistaVentas
     */
    public vistaRegistrarVentas() {
        initComponents(); 
        rellenarListaProductosVendidos(productosActuales);
        rellenarListaClientes(clientesActuales);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
       // desplegarNombresClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelRegistrarVentas = new javax.swing.JPanel();
        btAgregar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TextoTotal = new javax.swing.JTextField();
        btRegistrar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        TextoCantidad = new javax.swing.JTextField();
        btQuitar = new javax.swing.JButton();
        LabelUnidades = new javax.swing.JLabel();
        LabelFecha = new javax.swing.JLabel();
        comboFecha = new datechooser.beans.DateChooserCombo();
        lbTituloVentas = new javax.swing.JLabel();
        ScrollProductosVendidos = new javax.swing.JScrollPane();
        TablaProductosVendidos = new javax.swing.JTable();
        comboProductos = new javax.swing.JComboBox<String>();
        ScrollClientes = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();
        lbTituloProductos = new javax.swing.JLabel();
        lbTituloClientes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelRegistrarVentas.setToolTipText("");

        btAgregar.setText("Agregar");
        btAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarActionPerformed(evt);
            }
        });

        jLabel2.setText("Total");

        btRegistrar.setText("Registrar Venta");
        btRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistrarActionPerformed(evt);
            }
        });

        btCancelar.setText("Regresar al menu");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        TextoCantidad.setToolTipText("Cantidad");

        btQuitar.setText("Quitar");
        btQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuitarActionPerformed(evt);
            }
        });

        LabelUnidades.setText("Unidades");

        LabelFecha.setText("Fecha *");

        lbTituloVentas.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbTituloVentas.setForeground(new java.awt.Color(255, 0, 0));
        lbTituloVentas.setText("Ventas");

        TablaProductosVendidos.setModel(new ModeloTablaProductosVendidos());
        ScrollProductosVendidos.setViewportView(TablaProductosVendidos);

        comboProductos.setModel(new DefaultComboBoxModel(nombresProductosDisponibles.toArray()));
        comboProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProductosActionPerformed(evt);
            }
        });

        TablaClientes.setModel(new ModeloTablaClientes());
        ScrollClientes.setViewportView(TablaClientes);

        lbTituloProductos.setText("Productos");

        lbTituloClientes.setText("Clientes");

        javax.swing.GroupLayout PanelRegistrarVentasLayout = new javax.swing.GroupLayout(PanelRegistrarVentas);
        PanelRegistrarVentas.setLayout(PanelRegistrarVentasLayout);
        PanelRegistrarVentasLayout.setHorizontalGroup(
            PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                .addGroup(PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                                .addComponent(comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TextoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelUnidades)
                                .addGap(34, 34, 34)
                                .addComponent(btAgregar)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(TextoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelRegistrarVentasLayout.createSequentialGroup()
                                .addComponent(btCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btRegistrar))
                            .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                                .addComponent(btQuitar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                                .addComponent(lbTituloProductos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LabelFecha)
                                .addGap(18, 18, 18)
                                .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(lbTituloVentas)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ScrollProductosVendidos))
                    .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ScrollClientes)))
                .addContainerGap())
            .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTituloClientes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelRegistrarVentasLayout.setVerticalGroup(
            PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelRegistrarVentasLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(lbTituloVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(lbTituloClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LabelFecha)
                        .addComponent(lbTituloProductos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollProductosVendidos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAgregar)
                    .addComponent(jLabel2)
                    .addComponent(TextoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelUnidades)
                    .addComponent(comboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btQuitar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelRegistrarVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRegistrar)
                    .addComponent(btCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelRegistrarVentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelRegistrarVentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelRegistrarVentas.getAccessibleContext().setAccessibleName("Ventas");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
        new MenuPrincipal().setVisible(true);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistrarActionPerformed
        // TODO add your handling code here:
        registrarVenta();
        this.setVisible(false);
        this.dispose();
        new MenuPrincipal().setVisible(true);
    }//GEN-LAST:event_btRegistrarActionPerformed

    private void btAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarActionPerformed
        // TODO add your handling code here:
        agregarNuevosProductosVendidos(comboProductos.getSelectedItem().toString(),TextoCantidad.getText());
        actualizarListaProductosVendidos();
        actualizarCostoTotal();
    }//GEN-LAST:event_btAgregarActionPerformed

    private void btQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuitarActionPerformed
        // TODO add your handling code here:
        productosActuales.remove(getProductosVendidosSeleccionados());
        actualizarListaProductosVendidos();
        actualizarCostoTotal();
    }//GEN-LAST:event_btQuitarActionPerformed

    private void comboProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboProductosActionPerformed

    //Metodos para Productos
    
    private void agregarNuevosProductosVendidos(String NombreProd, String InputCantidad) {
        productosActuales.add(crearNuevosProductosVendidos(NombreProd, InputCantidad));
    }
    
    private ProductosVendidos crearNuevosProductosVendidos(String NombreProductos, String InputCantidad){
        Producto productos = adminProductos.getProductosPorNombre(NombreProductos);
        int cantidad = Integer.parseInt(InputCantidad);
        ProductosVendidos nuevosProductosVendidos = new ProductosVendidos(productos, cantidad);
        return nuevosProductosVendidos;
    }
    

    private void actualizarListaProductosVendidos() {
        vaciarListaProductosVendidos();
        rellenarListaProductosVendidos(productosActuales);
    }

    private void vaciarListaProductosVendidos() {
        ModeloTablaProductosVendidos modeloTablaProducosVendidos = getModeloTablaProductosVendidos();
        int rowCount = modeloTablaProducosVendidos.getRowCount();
        for (int i = rowCount - 1; 0 <= i; i--) {
            modeloTablaProducosVendidos.removerFila(i);
        }    
    }

    private void rellenarListaProductosVendidos(List<ProductosVendidos> productosActuales) {
        getModeloTablaProductosVendidos().agregarVariasFilas(productosActuales);
    }
    
    private ModeloTablaProductosVendidos getModeloTablaProductosVendidos() {
        return (ModeloTablaProductosVendidos) TablaProductosVendidos.getModel();
    }

    private boolean seSeleccionoFilaVacia() {
        int INDICE_NINGUNA_FILA = -1;
        
        return (getFilaSeleccionada() == INDICE_NINGUNA_FILA);    
    }

    private int getFilaSeleccionada() {
        return TablaProductosVendidos.getSelectedRow();
    }

    private ProductosVendidos getProductosVendidosSeleccionados() {
        if(!seSeleccionoFilaVacia()){
            int filaSeleccionada = getFilaSeleccionada();
            ProductosVendidos productoSeleccionado = 
                    getModeloTablaProductosVendidos().getFila(filaSeleccionada);
            return productoSeleccionado;
        }else{
            System.err.println("No se selecciono un Producto");
            return null;
        }    
    }
    
    private void actualizarCostoTotal() {
        costoTotal = 0;
        for(ProductosVendidos actual : productosActuales){
            costoTotal += actual.getCostoTotal();
        }
        TextoTotal.setText(String.valueOf(costoTotal));
    }
    
    public double getCostoTotal() {
        return costoTotal;
    } 
    
    private Date getFechaActual() {
        Calendar selectedDateChooserCalendar = comboFecha.getSelectedDate();
        
        return selectedDateChooserCalendar.getTime();
    }
    
    //Metodos Cliente
    
    private void rellenarListaClientes(List<Cliente> ClientesActuales) {
        getModeloTablaClientes().agregarVariasFilas(ClientesActuales);
    }
    
   
    private ModeloTablaClientes getModeloTablaClientes() {
        return (ModeloTablaClientes) TablaClientes.getModel();
    }
    
    private int getFilaSeleccionadaCliente() {
        return TablaClientes.getSelectedRow();
    }
    
    private boolean seSeleccionoFilaVaciaCliente() {
        int INDICE_NINGUNA_FILA = -1;
        
        return (getFilaSeleccionadaCliente() == INDICE_NINGUNA_FILA);    
    }
    
    private Cliente getClienteSeleccionado() {
        if(!seSeleccionoFilaVaciaCliente()){
            int filaClienteSeleccionada = getFilaSeleccionadaCliente();
            Cliente clienteSeleccionado = 
                    getModeloTablaClientes().getFila(filaClienteSeleccionada);
            return clienteSeleccionado;
        }else{
            System.err.println("No se selecciono un Cliente");
            JOptionPane.showMessageDialog(null, "No se selecciono un Cliente");
            return null;
        }    
    }
    
      
    //Metodo para terminar el registro de la venta
    private void registrarVenta() {
        vendedorMayoreo.registrarVenta(getClienteSeleccionado(),
                                       getFechaActual(),
                                       productosActuales
        );
        JOptionPane.showMessageDialog(null, "Venta Registrada");
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelFecha;
    private javax.swing.JLabel LabelUnidades;
    private javax.swing.JPanel PanelRegistrarVentas;
    private javax.swing.JScrollPane ScrollClientes;
    private javax.swing.JScrollPane ScrollProductosVendidos;
    private javax.swing.JTable TablaClientes;
    private javax.swing.JTable TablaProductosVendidos;
    private javax.swing.JTextField TextoCantidad;
    private javax.swing.JTextField TextoTotal;
    private javax.swing.JButton btAgregar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btQuitar;
    private javax.swing.JButton btRegistrar;
    private datechooser.beans.DateChooserCombo comboFecha;
    private javax.swing.JComboBox<String> comboProductos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbTituloClientes;
    private javax.swing.JLabel lbTituloProductos;
    private javax.swing.JLabel lbTituloVentas;
    // End of variables declaration//GEN-END:variables
}
